#Question 4

from tensorflow.keras.datasets import mnist
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
from tensorflow.keras.utils import to_categorical
from tensorflow.keras.models import load_model

# Load dataset
(X_train, y_train), (X_test, y_test) = mnist.load_data()

# Get the number of instances in training and testing sets
number_of_training_instances = X_train.shape[0]
number_of_testing_instances = X_test.shape[0]

# Reshape dataset to flatten images
X_train = X_train.reshape((number_of_training_instances, 28*28))
X_test = X_test.reshape((number_of_testing_instances, 28*28))

# Normalize pixel values
X_train = X_train.astype('float32') / 255.0
X_test = X_test.astype('float32') / 255.0


y_train = to_categorical(y_train)
y_test = to_categorical(y_test)

# Initialize a Sequential model
model = Sequential()

# Add layers to the model (you can customize the architecture as needed)
model.add(Dense(128, input_shape=(28*28,), activation='relu'))
model.add(Dense(64, activation='relu'))
model.add(Dense(10, activation='softmax'))  # Output layer with 10 neurons for 10 classes (digits 0-9)

# Compile the model
model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])

# Train the model
model.fit(X_train, y_train, epochs=10, batch_size=32, verbose=1, validation_split=0.1)

# Evaluate the model on the testing set
accuracy = model
